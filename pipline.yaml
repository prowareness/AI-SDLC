trigger:
  - main

pool:
  vmImage: "ubuntu-latest"
  
stages:
  - stage: Checkout
    jobs:
      - job: CheckoutCode
        steps:
          - checkout: self

  - stage: Deploy
    dependsOn: Checkout
    jobs:
      - job: Deploy
        steps:
        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
          displayName: 'Terraform : azurerm'
          inputs:
            workingDirectory: IAC
            backendAzureRmUseEnvironmentVariablesForAuthentication: false
            backendAzureRmUseEntraIdForAuthentication: false
            backendServiceArm: AzureCloud
            backendAzureRmResourceGroupName: AISDLC
            backendAzureRmStorageAccountName: aistatefile
            backendAzureRmContainerName: statefile
            backendAzureRmKey: terraform.tfstate
        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
          displayName: 'Terraform : azurerm'
          inputs:
            command: apply
            workingDirectory: IAC
            environmentServiceNameAzureRM: AzureCloud
            backendAzureRmUseEnvironmentVariablesForAuthentication: false
            backendAzureRmUseEntraIdForAuthentication: false

  - stage: Build
    dependsOn: Deploy
    jobs:
      - job: Build
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "Updating apt repository..."
                sudo apt-get update -y
                
                echo "Installing OpenJDK 17..."
                sudo apt-get install -y openjdk-17-jdk
                
                echo "Setting JAVA_HOME..."
                sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-17-openjdk-amd64/bin/java 1
                sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
         
          - task: Gradle@3
            inputs:
              gradleWrapperFile: backend/gradlew
              workingDirectory: backend
              testResultsFiles: backend/*.xml
              tasks: 'clean build'
              javaHomeOption: 'JDKPath'
              jdkDirectory: '/usr/lib/jvm/java-17-openjdk-amd64'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                cd 'backend/build/libs'
                ls

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                cd 'frontend'
                sudo apt install nodejs
                sudo apt install npm
                npm install
                npm run build
                jar -cvf vacancy.war -C build/ .
                ls

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                mkdir artifacts
                cp backend/build/libs/recruitment.war artifacts/recruitment.war
                cp frontend/vacancy.war artifacts/vacancy.war
                cd artifacts
                ls
          - task: CopyFilesOverSSH@0
            displayName: 'Securely copy files to the remote machine'
            inputs:
              sshEndpoint: 'SSH-SDLCvm'
              sourceFolder: '$(Build.SourcesDirectory)/artifacts'
              targetFolder: '~/targetpath'
          - task: SSH@0
            inputs:
              sshEndpoint: 'SSH-SDLCvm'
              runOptions: 'commands'
              commands: |
                #!/bin/bash

                # Stop Tomcat
                sudo systemctl stop tomcat
                
                # Remove existing WAR file
                sudo rm -rf /opt/tomcat/webapps/recruitment.war
                sudo rm -rf /opt/tomcat/webapps/vacancy.war
                
                # Copy new WAR file
                sudo cp /home/adminuser/targetpath/*.war /opt/tomcat/webapps/
                
                # Start Tomcat
                sudo systemctl start tomcat
                
                sudo chmod 777 -R /opt/tomcat/
      
  - stage: APITests
    dependsOn: Build
    jobs:
      - job: RunAPITests
        steps:
          - script: |
              chmod +x ./scripts/run-api-tests.sh
              sh ./scripts/run-api-tests.sh
            displayName: "Run API Tests Stage"
          - task: PublishPipelineArtifact@1
            displayName: "Publish API test results"
            condition: always()
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/artifacts
              artifactName: api-test-results
              artifactType: PipelineArtifact

  - stage: UITests
    dependsOn: APITests
    jobs:
      - job: RunUITests
        steps:
          - script: |
              chmod +x ./scripts/run-ui-tests.sh
              sh ./scripts/run-ui-tests.sh
            displayName: "Run UI Tests Stage"
          - task: PublishPipelineArtifact@1
            displayName: "Publish UI test results"
            condition: always()
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/artifacts
              artifactName: ui-test-results
              artifactType: PipelineArtifact
