trigger:
  - Main

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Checkout
    jobs:
      - job: CheckoutCode
        steps:
          - checkout: self

  - stage: Build
    jobs:
      - job: BuildFrontend
        steps:
          - script: |
              sh ./scripts/build-frontend.sh
            displayName: "Run Build Frontend Stage"

      - job: BuildBackend
        steps:
          - script: |
              sh ./scripts/build-backend.sh
            displayName: "Run Build Backend Stage"

  - stage: Test
    jobs:
      - job: TestFrontend
        dependsOn: BuildFrontend
        steps:
          - script: |
              sh ./scripts/test-frontend.sh
            displayName: "Run Test Frontend Stage"

      - job: TestBackend
        dependsOn: BuildBackend
        steps:
          - script: |
              sh ./scripts/test-backend.sh
            displayName: "Run Test Backend Stage"

  - stage: Package
    dependsOn: Test
    jobs:
      - job: PackageFrontend
        steps:
          - script: |
              sh ./scripts/package-frontend.sh
            displayName: "Run Package Frontend Stage"

      - job: PackageBackend
        steps:
          - script: |
              sh ./scripts/package-backend.sh
            displayName: "Run Package Backend Stage"

  - stage: Deploy
    dependsOn: Package
    jobs:
      - job: Deploy
        steps:
          - script: |
              sh ./scripts/deploy.sh
            displayName: "Run Deploy Stage"

  - stage: APITests
    dependsOn: Deploy
    jobs:
      - job: RunAPITests
        steps:
          - script: |
              chmod +x ./scripts/run-api-tests.sh
              sh ./scripts/run-api-tests.sh
            displayName: "Run API Tests Stage"
          - task: PublishPipelineArtifact@1
            displayName: "Publish API test results"
            condition: always()
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/artifacts
              artifactName: api-test-results
              artifactType: PipelineArtifact

  - stage: UITests
    dependsOn: APITests
    jobs:
      - job: RunUITests
        steps:
          - script: |
              chmod +x ./scripts/run-ui-tests.sh
              sh ./scripts/run-ui-tests.sh
            displayName: "Run UI Tests Stage"
          - task: PublishPipelineArtifact@1
            displayName: "Publish UI test results"
            condition: always()
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/artifacts
              artifactName: ui-test-results
              artifactType: PipelineArtifact
