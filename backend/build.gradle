buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    ext {
        openapiGeneratorVersion = '7.0.0'
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:${openapiGeneratorVersion}"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.openapi.generator" version "${openapiGeneratorVersion}"
    id 'war'
    id "org.sonarqube" version "4.4.1.3373"
    id 'jacoco'
}
jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

sonarqube {
    properties {
        property "sonar.projectKey", "AI-SDLC"
        property "sonar.organization", "prowareness"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.exclusions", "**/generated-sources/**"
    }
}

tasks.named('sonar').configure {
    dependsOn test
}

apply plugin: 'org.openapi.generator'

group = 'com.devon'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation "org.hibernate.orm:hibernate-core"
    implementation "jakarta.transaction:jakarta.transaction-api"
    implementation "org.xerial:sqlite-jdbc:3.34.0"
    implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.1.Final'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation("org.openapitools:openapi-generator-gradle-plugin:7.0.0")
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation 'org.slf4j:slf4j-simple:2.0.11'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    configurations {
        all {
            exclude group: 'ch.qos.logback', module: 'logback-classic'
            exclude group: 'ch.qos.logback', module: 'logback-core'
        }
    }
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/api-config.yaml".toString()
    outputDir = "$buildDir/generated-sources".toString()
    apiPackage = "com.devon.recruitmentmgmt.api"
    invokerPackage = "com.devon.recruitmentmgmt.invoker"
    modelPackage = "com.devon.recruitmentmgmt.to"
    configOptions = [
            "dateLibrary": "java17",
            "interfaceOnly": "true",
            "skipDefaultInterface": "true",
            "generateSupportingFiles": "false",
            "useSpringBoot3": "true",
            "lombokAnnotations": "true",
            "additionalModelTypeAnnotations": "@lombok.Builder"
    ]
    typeMappings = [
            float: "java.math.BigDecimal"
    ]
    globalProperties = [
            modelDocs: "false",
            models   : "",
            apis     : ""
    ]
}
sourceSets {
    main {
        java {
            srcDir(files("${openApiGenerate.outputDir.get()}/src/main"))
        }
    }
}

test {
    useJUnitPlatform()
}

// Task dependencies
compileJava.dependsOn tasks.openApiGenerate

war {
    archiveFileName = 'recruitment.war'
}
