openapi: 3.0.0
info:
  title: Recruitment API
  version: 1.0.0
paths:
  /api/login:
    post:
      summary: Validate login credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Unauthorized

  /api/vacancies:
    get:
      summary: Get all vacancies
      parameters:
        - in: query
          name: createdBy
          required: true
          schema:
            type: string
          description: Email of the user who created the vacancies
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 5
          description: Maximum number of vacancies to return
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            default: 0
          description: Number of vacancies to skip before starting to collect the result set
        - in: query
          name: sortBy
          required: false
          schema:
            type: string
            default: vacancyId
          description: The field by which the result set should be sorted
        - in: query
          name: sortDirection
          required: false
          schema:
            type: string
            default: DESC
          description: The direction in which the result set should be sorted
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyListResponse'
        '400':
          description: Bad request
        '404':
          description: Not Found

    post:
      summary: Add a new vacancy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVacancyRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVacancyResponse'
        '400':
          description: Bad request

  /api/vacancies/{vacancyId}:
    get:
      summary: Get a specific vacancy by ID
      parameters:
        - in: path
          name: vacancyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyResponse'
        '404':
          description: Not Found


    put:
      summary: Edit a specific vacancy by ID
      parameters:
        - in: path
          name: vacancyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVacancyRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyResponse'
        '404':
          description: Not Found

components:
  schemas:
    LoginRequest:
      type: object
      required:
        - emailId
        - password
      properties:
        emailId:
          type: string
          example: john.doe@devon.nl
        password:
          type: string
          example: devon123

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Login successful"

    VacancyResponse:
      type: object
      properties:
        vacancyId:
          type: string
          example: JOB000001
        jobTitle:
          type: string
          example: Developer
        description:
          type: string
          example: Looking for a Java developer
        requirements:
          type: string
          example: Must be having hands experience in Java
        location:
          type: string
          example: Bangalore
        maxSalary:
          type: number
          format: float
          example: 10000000.23
        applicationDeadline:
          type: string
          format: date-time
          example: 2024-12-31T23:59:59
        createdBy:
          type: string
          example: "john.doe@devon.nl"

    CreateVacancyRequest:
      type: object
      required:
        - jobTitle
        - description
        - requirements
        - location
        - maxSalary
        - applicationDeadline
        - createdBy
      properties:
        jobTitle:
          type: string
          example: Developer
        description:
          type: string
          example: Looking for a Java developer
        requirements:
          type: string
          example: Must be having hands-on experience in Java
        location:
          type: string
          example: Bangalore
        maxSalary:
          type: number
          format: float
          example: 10000000.23
        applicationDeadline:
          type: string
          format: date-time
          example: 2024-12-31T23:59:59
        createdBy:
          type: string
          example: "john.doe@devon.nl"

    CreateVacancyResponse:
      type: object
      properties:
        vacancyId:
          type: string
          example: JOB000001

    VacancyListResponse:
      type: object
      properties:
        vacancies:
         type: array
         items:
           $ref: '#/components/schemas/VacancyResponse'
        total:
         type: long
         example: 5

#    EditVacancyRequest:
#      type: object
#      properties:
#        jobTitle:
#          type: string
#        description:
#          type: string
#        requirements:
#          type: string
#        location:
#          type: string
#        maxSalary:
#          type: number
#          format: float
#        applicationDeadline:
#          type: string
#          format: date-time

#    EditVacancyResponse:
#      type: object
#      properties:
#        vacancyId:
#          type: string
#          example: JOB000001
#        jobTitle:
#          type: string
#          example: Developer
#        description:
#          type: string
#          example: Looking for a Java developer
#        requirements:
#          type: string
#          example: Must be having hands-on experience in Java
#        location:
#          type: string
#          example: Bangalore
#        maxSalary:
#          type: number
#          format: float
#          example: 10000000.23
#        applicationDeadline:
#          type: string
#          format: date-time
#          example: 2024-12-31T23:59:59
#        createdBy:
#          type: string
#          example: "john.doe@devon.nl"